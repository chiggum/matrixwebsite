<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Matrix</title>

<!--StyleSheet Begin-->
<link rel="stylesheet" href="css/main.css">
<!--StyleSheet End-->
<link rel="shortcut icon" href="small-logo.png" type="image/png">

<!-- Scripts Begin-->

<script src = "scripts/easeljs-0.7.1.min.js"></script>
<script src = "scripts/jQuery.js"></script>
<script src = "scripts/tweenjs-0.5.1.min.js"></script>

<script>
function init()
{	
		
	var image21 = [];
	image21[0] = new Image();
	image21[0].src = "assets/about.png";
	image21[1] = new Image();
	image21[1].src = "assets/objective.png";
	image21[2] = new Image();
	image21[2].src = "assets/events.png";
	image21[3] = new Image();
	image21[3].src = "assets/links.png";
	image21[4] = new Image();
	image21[4].src = "assets/contact.png";
	
	var image31 = [];
	image31[0] = new Image();
	image31[0].src = "assets/about-hover.png";
	image31[1] = new Image();
	image31[1].src = "assets/objective-hover.png";
	image31[2] = new Image();
	image31[2].src = "assets/events-hover.png";
	image31[3] = new Image();
	image31[3].src = "assets/links-hover.png";
	image31[4] = new Image();
	image31[4].src = "assets/contact-hover.png";
	
	var image41 = [];
	image41[0] = new Image();
	image41[0].src = "assets/about-exit.png";
	image41[1] = new Image();
	image41[1].src = "assets/objective-exit.png";
	image41[2] = new Image();
	image41[2].src = "assets/events-exit.png";
	image41[3] = new Image();
	image41[3].src = "assets/links-exit.png";
	image41[4] = new Image();
	image41[4].src = "assets/contact-exit.png";
	
	var image51 = [];
	image51[0] = new Image();
	image51[0].src = "assets/wolfram.png";
	image51[1] = new Image();
	image51[1].src = "assets/crypto.png";
	image51[2] = new Image();
	image51[2].src = "assets/mathmod.png";
	image51[3] = new Image();
	image51[3].src = "assets/stock.png";
	image51[4] = new Image();
	image51[4].src = "assets/hack.png";
	image51[5] = new Image();
	image51[5].src = "assets/facebook.png";
	image51[6] = new Image();
	image51[6].src = "assets/dom.png";
	image51[7] = new Image();
	image51[7].src = "assets/faculty.png";
	image51[8] = new Image();
	image51[8].src = "assets/team.png";
	
	var image61 = [];
	image61[0] = new Image();
	image61[0].src = "assets/soon.png";
	image61[1] = new Image();
	image61[1].src = "assets/soon.png";
	image61[2] = new Image();
	image61[2].src = "assets/soon.png";
	image61[3] = new Image();
	image61[3].src = "assets/live.png";
	image61[4] = new Image();
	image61[4].src = "assets/soon.png";
	image61[5] = new Image();
	image61[5].src = "assets/visitfb.png";
	image61[6] = new Image();
	image61[6].src = "assets/visitdp.png";
	image61[7] = new Image();
	image61[7].src = "assets/faculty-hover.png";
	image61[8] = new Image();
	image61[8].src = "assets/team-hover.png";

	
	var image = [];
	image[0] = new Image();
	image[0].src = "";
	image[1] = new Image();
	image[1].src = "";
	image[2] = new Image();
	image[2].src = "";
	image[3] = new Image();
	image[3].src = "";
	image[4] = new Image();
	image[4].src = "";
	image[5] = new Image();
	image[5].src = "assets/tile1_.png";
	
	
	var backCanvas = document.getElementById("backCanvas");
	var ctxBack = backCanvas.getContext('2d');
	backCanvas.width = $(window).width();
	backCanvas.height = $(window).height();
	backCanvas.style.marginLeft = "0px";
	backCanvas.style.marginTop = "0px";
	
	
	var badValue = -23;
	var checkTileAnimated = 0;
	
	var stage = new createjs.Stage("backCanvas");
	stage.enableMouseOver(30);
		
	numTilesType_2 = 5;
	
	var tile1 = [];
	var tile2 = [];
	var tile2Copy = [];
	var tile2x = [];
	var tile2y = [];
	var tile3 = [];
	var tile4 = [];
	var tile4Cover = [];
	var tile3FinalPosX = [-1, 1, 0, -1, 1, -1, 1, 1];
	var tile3FinalPosY = [0, 0, -1, -1, -1, -1, -1, 1];
	var tile4FinalPosX = [-2, 2, 0, -1, 1, -1, 1, 1];
	var tile4FinalPosY = [0, 0, -2, -2, -2, 2, 2, 2];
	
	var childCount = [0,0,5,2,2];
	
	var addressStrings = [];
	var i = 0;
	for(i = 0; i < numTilesType_2; ++i)
	{
		addressStrings[i] = [];
	}
	
	var clickOnTile2 = [1, 1, 0, 0, 0];
	addressStrings[0][0] = "about.html";
	addressStrings[1][0] = "objectives.html";
	addressStrings[2][0] = "wolfram.html";
	addressStrings[2][1] = "crypto.html";
	addressStrings[2][2] = "mathModelling.html";
	addressStrings[2][3] = "stockMarket.html";
	addressStrings[2][4] = "webHacking.html";
	addressStrings[3][0] = "https://www.facebook.com/pages/Matrix-IIT-Guwahati/209931282363404";
	addressStrings[3][1] = "http://shilloi.iitg.ernet.in/~maths/";
	addressStrings[4][0] = "people.html";
	addressStrings[4][1] = "teamMatrix.html";
	

	for(var i = 0; i < $(window).width() / 100; ++i)
	{
		tile4[i] = [];
		tile4Cover[i] = [];
	}
	
	for(var i = 0; i < numTilesType_2; ++i)
	{
		tile3[i] = [];
	}

	
	var matrix = new Image();
	matrix.src = "assets/name.png";

	$(matrix).load(function() 
	{
		var matrixImage = new createjs.Bitmap();
		matrixImage.image = matrix;
		matrixImage.y = $(window).height() - matrix.height - $(window).height()/50;
		matrixImage.x = $(window).width()/100;
		matrixImage.draw(ctxBack);
		stage.addChild(matrixImage);
		stage.update();
			
		
		
		
		
		function myAnimate(toX, toY, shape, checkAlpha, id )
		{
			createjs.Ticker.addEventListener("tick", tick);
			createjs.Ticker.setInterval(25);
			createjs.Ticker.setFPS(40);
										
			function tick() 
			{
				createjs.Tween.get(shape)
						.to({x:toX, y:toY, rotation:(checkAlpha == 1)?0:((checkAlpha == 2 || checkAlpha == 2.5)?0:0)},600 - checkAlpha * 200, 
						(checkAlpha == 1)?createjs.Ease.quintOut:((checkAlpha == 2 || checkAlpha == 2.5)?createjs.Ease.linear:createjs.Ease.bounceOut))
						.call(handleComplete);
				function handleComplete()
				{
					shape.x = toX;
					shape.y = toY;
					createjs.Ticker.removeEventListener("tick", tick);
					if(checkAlpha == 1)
					{
						shape.x = tile2[id].drawX;
						shape.y = tile2[id].drawY;
						shape.alpha = 0;
					}
					if(checkAlpha == 2 && tile1[id] != undefined)
					{
						checkTileAnimated =1;
						tile1[id].shape.image = "";
					}
					stage.update();
				};
				
				stage.update(); 
			}
		}
		
		var checkhovered = 0;
	
		function tileType_3(parent, id, stage_i, drawX, drawY, width, height)
		{
			this.parent = parent;
			this.id = id;
			this.stage = stage_i;
			this.drawX = drawX;
			this.drawY = drawY;
			this.width = width;
			this.height = height;
			this.image1 = image51[(this.id + childCount[parent - 1] + childCount[parent - 2])%9];
			this.image2 = image61[(this.id + childCount[parent - 1] + childCount[parent - 2])%9];
			var x = new createjs.Bitmap();
			var yq = new createjs.Shape();
			var zq = new createjs.Bitmap();
			x.image = this.image1;
			x.x = this.drawX;
			x.y = this.drawY;
			x.alpha = 0;
			zq.image = this.image2;
			zq.x = this.drawX + tile4FinalPosX[id] * 100 ;
			zq.y = this.drawY + tile4FinalPosY[id] * 100 ;
			zq.alpha = 0;
			zq.draw(ctxBack);
			stage.addChild(zq);
			this.shape = x;
		//	this.background = yq;
			this.plainTile = zq;
			var stagex = this.stage;
			x.draw(ctxBack);
			
			this.shape.addEventListener("mouseover",
										 function () 
										 {	
											if(!createjs.Tween.hasActiveTweens(x))
											{
											 x.cursor = "pointer";
											 x.x = x.x + 5;
											 x.y = x.y + 5;
											
											 x.scaleX = 0.9;
											 x.scaleY = 0.9;
											 zq.alpha = 1;
										//	 yq.alpha = 1;
											 checkhovered = 1;
											 stage.update();	
											}
										 });
			
			this.shape.addEventListener("click",
								 function () 
								 {	
									var myWindow = window.open(addressStrings[parent][id],"_self");
								 });
								 
		
			this.shape.addEventListener("mouseout",
										 function () 
										 {	
											if(!createjs.Tween.hasActiveTweens(x) && checkhovered)
											{
											 x.cursor = "pointer";
											 x.x = x.x - 5;
											 x.y -= 5;
											 x.scaleX = 1;
											 x.scaleY = 1;
											 zq.alpha = 0;
											// yq.alpha = 0;
											checkhovered = 0;
											 stage.update();
											}
										 });
			
			this.stage.addChild(this.shape);
			this.stage.update();	
		}
		
		function tileType_2(id, stage_i, drawX, drawY, width, height, numChild, futureOfChildY)
		{
			this.id = id;
			this.drawX = drawX;
			this.drawY = drawY;
			this.width = width;
			this.height = height;
			this.stage = stage_i;
			this.numChildTiles = numChild;
			this.futureOfChildY = futureOfChildY;		
			this.image1 = image21[(this.id)%5];
			this.image2 = image31[(this.id)%5];
			this.image3 = image41[(this.id)%5];
			var image1 = this.image1;
			var image2 = this.image2
			var image3 = this.image3
			var x = new createjs.Bitmap();
			x.image = image1;
			x.x = this.drawX;
			x.y = this.drawY;
			this.shape = x;
			var stagex = this.stage;
			x.draw(ctxBack);
			//x.alpha = 0.5;
			var check = 0;
			var inCrossStage = 0;
			this.shape.addEventListener("mouseover",
										 function () 
										 {	
											 x.cursor = "pointer";
											 // x.alpha = 0.5;
											 if(inCrossStage == 0)
												x.image = image2;
											 else
												x.image = image3;	
											 
											 for(var k = 0; k < numTilesType_2; ++k)
											 {
												 if(k != id && tile2[k] != undefined && inCrossStage == 0)
													tile2[k].shape.alpha = 0.5;
												 stagex.update();
											 }
																		 
										});
			 this.shape.addEventListener("click",
								 function () 
								 {	
									if(clickOnTile2[id])
									{
										var myWindow = window.open(addressStrings[id][0],"_self");
									}
									else
									{
									var xCoord;
									var yCoord;
									var reqId;
									if(inCrossStage == 0)
									{
										for(var k = 0; k < numChild; ++k)
										{	
											tile3[id][k].drawX = tile2[id].drawX + 100 * tile3FinalPosX[k];
											tile3[id][k].drawY = tile2[id].drawY + 100 * tile3FinalPosY[k];
											xCoord = (tile3[id][k].drawX - 1) / 100;
											yCoord = (tile3[id][k].drawY - 1) / 100;
											reqId = xCoord * Math.ceil(( $(window).height() / 100 )) + yCoord;
											tile3[id][k].shape.alpha = 1;
											myAnimate(tile2[id].drawX + 100 * tile3FinalPosX[k], 
													  tile2[id].drawY + 100 * tile3FinalPosY[k],
													  tile3[id][k].shape, 2, reqId);
										}
										for(var k = 0; k < numTilesType_2; ++k)
										{
											 if(k != id && tile2[k] != undefined)
											 {
												tile2[k].shape.image = "";
											 }
												stagex.update();
										}
									 
										 x.cursor = "pointer";
										 x.image = image3;
										 inCrossStage = 1;
										 stagex.update();
									}
									else
									{
										for(var k = 0; k < numChild; ++k)
										{	
											
											xCoord = (tile3[id][k].drawX - 1) / 100;
											yCoord = (tile3[id][k].drawY - 1) / 100;
											reqId = xCoord * Math.ceil(( $(window).height() / 100 )) + yCoord;
											tile1[reqId].shape.image = image[5];
											stagex.update();
											myAnimate(tile3[id][k].drawX + 200 , $(window).height(), tile3[id][k].shape, 1, id);
											tile3[id][k].drawX = tile2[id].drawX;
											tile3[id][k].drawY =  tile2[id].drawY
										}
										
										for(var  k = 0; k < numTilesType_2; ++k)
										{
											if(k != id && tile2[k] != undefined)
											{
												var drawYTemp = tile2[k].drawY;
												//tile2[k].shape.image = "";
												tile2[k] = new tileType_2(k,
																		 stage,
																		 tile2[k].drawX ,
																		 -1*tile2[k].height,
																		  tile2[k].width ,
																		  tile2[k].height,
																		  childCount[k], 
																		  badValue);//-23 is very bad value
											
												var shape = tile2[k].shape;
											
												myAnimate(tile2[k].drawX, drawYTemp, shape, 0);
												tile2[k].drawY = drawYTemp;
												stage.update();
											}
										}								
										x.cursor = "pointer";
										x.image = image2;
										inCrossStage = 0;
										stagex.update();
										checkTileAnimated = 0;
										checkhovered = 0;
									}
									}
								 });
								 
			 this.shape.addEventListener("mouseout",
								 function () 
								 {	
									 createjs.Tween.get(x)
												  .wait(0)
												  .to({alpha:1, visible:true}, 10)
												  .call(handleComplete);
												function handleComplete() 
												{
													x.alpha = 1;
													if(inCrossStage == 0)
														x.image = image1;
													else
														x.image = image2;
													stagex.update();
												}
										for(var k = 0; k < numTilesType_2; ++k)
										 {
											 if(k != id && tile2[k] != undefined && inCrossStage == 0)
												tile2[k].shape.alpha = 1;
										 }
									 stagex.update();
								 });
								 
			this.stage.addChild(this.shape);
			this.stage.update();
		}
	
		function tileType_1(id, stage_i, drawX, drawY, width, height)
		{
			this.id = id;
			this.drawX = drawX;
			this.drawY = drawY;
			this.width = width;
			this.height = height;
			this.stage = stage_i;
			this.image = image[5];
			var x = new createjs.Bitmap();
			x.image = this.image;
			x.x = drawX;
			x.y = drawY;
			this.shape = x;
			var stagex = this.stage;
			this.shape.draw(ctxBack);
			x.alpha = 0.6;
			this.shape.addEventListener("mouseover",
										 function () 
										 {
											 x.alpha = 0.1;
											 stagex.update();
										 });
			 this.shape.addEventListener("mouseout",
										 function () 
										 {		
												createjs.Tween.get(x)
															  .wait(1)
															  .to({alpha:0.6, visible:true}, 500)
															  .call(handleComplete);
												function handleComplete() 
												{
													x.alpha = 0.6;
													stagex.update();
												}
											  stagex.update();
										 });
			this.stage.addChild(this.shape);
			this.stage.update();
		}
		
		
		function searchInTile2(i, j, begin, end)
		{
			var check = 0;
			for(var k = begin; k <= end; ++k)
			{
				if(i == tile2x[k])
				{
					++check;
					if(j == tile2y[k])
					{
						++check;
						break;
					}
					else
						check = 0;
				}
			}
			if(check == 2)
				return true;
			else
				return false;
		}
		
		var poolx = [];
		for(var i = 1; i < $(window).width() / 100 - 3 ; ++i)
		{
			poolx[i - 1] = i
		}
		var pooly = [];
		for(var i = 2; i < $(window).height() / 100 - 2 ; ++i)
		{
			pooly[i - 2] = i 
		}
		pooly[i-2] = 2;
		pooly[i-1] = 3;
		var getNumberx = function () 
		{
			if (poolx.length == 0)
			{
				alert('Please Increase Screen Size');
				throw "Width/Height Underflow";
			}
			var index = Math.floor(poolx.length * Math.random());
			var drawn = poolx.splice(index, 1);
			return drawn[0];
		};
		var getNumbery = function ()
		{
			if (poolx.length == 0) 
			{
				alert('Please Increase Screen Size');
				throw "Width/Height Underflow";
			}
			var index = Math.floor(pooly.length * Math.random());
			var drawn = pooly.splice(index, 1);
			return drawn[0];
		};
		
		for(var i = 0; i < numTilesType_2; ++i)
		{
				tile2x[i] = getNumberx();
				tile2y[i] = getNumbery();
		}
		
		
		var count = 0;
	
		for(var i = 0; i < $(window).width() / 100; ++i)
		{
			for(var j = 0; j < $(window).height() / 100; ++j)
			{		
					r = j + Math.ceil($(window).height() / 100) * i;
					if(searchInTile2(i,j, 0, numTilesType_2 - 1))
					{
						tile1[r] = new tileType_1(r, stage, 100* i + 1, 100 * j + 1, 100 - 10,100 - 10);
						for(var k = 0; k < childCount[count] ; ++k)
						{
							tile3[count][k] = new tileType_3(count, k, stage,100* i + 1, 100 * j + 1, 100 - 10, 100 - 10);
							stage.update();
						}
						tile2[count] = new tileType_2(count, stage, 100* i + 1, 100 * j + 1, 100 - 10,100 - 10, childCount[count], 100 * j + 1);
						tile2Copy[count] = tile2[count];
						count++;
					}
					else
					{
						tile1[r] = new tileType_1(r, stage, 100* i + 1, 100 * j + 1, 100 - 10,100 - 10);	
					}
			}
		}
		stage.update();
	    });
}
 

</script>
<!-- Scripts End-->
</head>

<body id = "body" onLoad = "init();">
	<canvas id = "backCanvas"></canvas>


</body>
</html>
